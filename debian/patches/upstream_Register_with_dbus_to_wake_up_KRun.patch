From: Liu Zhe <cruise.pas@gmail.com>
Date: Tue, 10 Mar 2015 11:58:51 +0000
Subject: Register with dbus to wake up KRun, and unregister then
X-Git-Tag: v15.03.90
X-Git-Url: http://quickgit.kde.org/?p=kate.git&a=commitdiff&h=5207e49a84145e21060f3b5beff302a437cfeccd
---
Register with dbus to wake up KRun, and unregister then

This fixes the "KDEInit could not launch Kate" error
when opening second file with Kate

REVIEW: 122498
BUG: 343673
BUG: 339094
---


--- a/kate/src/kateapp.cpp
+++ b/kate/src/kateapp.cpp
@@ -151,10 +151,8 @@
     } else if (!m_args.isSet(QStringLiteral("stdin")) && (m_args.positionalArguments().count() == 0)) { // only start session if no files specified
         // let the user choose session if possible
         if (!sessionManager()->chooseSession()) {
-#ifdef Q_WS_X11
             // we will exit kate now, notify the rest of the world we are done
-            KStartupInfo::appStarted(startupId());
-#endif
+            KStartupInfo::appStarted(KStartupInfo::startupId());
             return false;
         }
     } else {
@@ -167,9 +165,7 @@
     }
 
     // notify about start
-#ifdef Q_WS_X11
-    KStartupInfo::setNewStartupId(activeKateMainWindow(), startupId());
-#endif
+    KStartupInfo::setNewStartupId(activeKateMainWindow(), KStartupInfo::startupId());
 
     QTextCodec *codec = m_args.isSet(QStringLiteral("encoding")) ? QTextCodec::codecForName(m_args.value(QStringLiteral("encoding")).toUtf8()) : 0;
     bool tempfileSet = m_args.isSet(QStringLiteral("tempfile"));

--- a/kate/src/main.cpp
+++ b/kate/src/main.cpp
@@ -25,6 +25,7 @@
 
 #include <KAboutData>
 #include <KLocalizedString>
+#include <KStartupInfo>
 #include <kdbusservice.h>
 
 #include <QByteArray>
@@ -395,10 +396,12 @@
                 QDBusConnection::sessionBus().connect(serviceName, QStringLiteral("/MainApplication"), QStringLiteral("org.kde.Kate.Application"), QStringLiteral("documentClosed"), waiter, SLOT(documentClosed(QString)));
             }
 
-    #ifdef Q_WS_X11
+            // KToolInvocation (and KRun) will wait until we register on dbus
+            KDBusService dbusService(KDBusService::Multiple);
+            dbusService.unregister();
+
             // make the world happy, we are started, kind of...
             KStartupInfo::appStarted();
-    #endif
 
             // this will wait until exiting is emitted by the used instance, if wanted...
             return needToBlock ? app.exec() : 0;

